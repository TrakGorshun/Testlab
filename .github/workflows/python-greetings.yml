# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Install pip dependencies
        run: |
          echo "Installing all required dependencies..."
          cd python-greetings
          pip install -r requirements.txt

  deploy-to-dev:
    runs-on: self-hosted
    needs: install-pip-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Install pm2
        run: npm install -g pm2
        working-directory: python-greetings
      - name: Stop existing dev environment
        run: |
          pm2 delete greetings-app-<vides_nosaukums> || true
        working-directory: python-greetings
      - name: Start dev environment
        run: |
          pm2 start app.py --name greetings-app-dev -- --port 7001
        working-directory: python-greetings

  tests-on-dev:
    runs-on: self-hosted
    needs: deploy-to-dev
    env:
      APP_PORT: 7001
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Install npm dependencies
        run: |
          npm install
          echo "Installed npm dependencies."
        working-directory: course-js-api-framework
      - name: Run tests on Dev
        run: |
          echo "Running tests on Dev..."
          npm run greetings greetings_dev -- --port 7001
        working-directory: course-js-api-framework

  deploy-to-staging:
    runs-on: self-hosted
    needs: tests-on-dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Deploy to Staging
        run: |
           echo "Deploying to Staging..."
           pm2 delete greetings-app-staging & set "errorlevel=0"
           pm2 start app.py --name greetings-app-staging -- --port 7002

  tests-on-staging:
    runs-on: windows-latest
    needs: deploy-to-staging
    steps:
      - name: Run tests on Staging
        run: |
          echo "Running tests on Staging..."

  deploy-to-preprod:
    runs-on: windows-latest
    needs: tests-on-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Deploy to Preprod
        run: |
          echo "Deploying to Preprod..."
          pm2 delete greetings-app-preprod & set "errorlevel=0"
          pm2 start app.py --name greetings-app-preprod -- --port 7003

  tests-on-preprod:
    runs-on: windows-latest
    needs: deploy-to-preprod
    steps:
      - name: Run tests on Preprod
        run: |
          echo "Running tests on Preprod..."

  deploy-to-prod:
    runs-on: windows-latest
    needs: tests-on-preprod
    steps:
       - name: Checkout code
         uses: actions/checkout@v3.5.2
       - name: Clone python-greetings repository
         uses: actions/checkout@v3.5.2
         with:
            repository: mtararujs/python-greetings
            path: python-greetings
       - name: Deploy to Prod
         run: |
            echo "Deploying to Prod..."
            pm2 delete greetings-app-preprod & set "errorlevel=0"
            pm2 start app.py --name greetings-app-prod -- --port 7004

  tests-on-prod:
    runs-on: windows-latest
    needs: deploy-to-prod
    steps:
      - name: Run tests on Prod
        run: |
          echo "Running tests on Prod..."
