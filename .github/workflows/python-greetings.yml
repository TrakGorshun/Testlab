# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: ./python-greetings
          ref: '4e911440a9886c7c26ccbb4eb55f0bc2a5067b51'
          fetch-depth: 0
      - name: Install pip dependencies
        working-directory: ./python-greetings
        run: |
          echo "Installing all required dependencies..."
          pip install -r requirements.txt

  deploy-to-dev:
    needs: [install-pip-deps]
    runs-on: self-hosted
    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: ./python-greetings
          ref: '4e911440a9886c7c26ccbb4eb55f0bc2a5067b51'
          fetch-depth: 0
      - name: Install pm2
        working-directory: ./python-greetings
        run: npm install -g pm2
      
      - name: Stop existing dev environment
        working-directory: ./python-greetings
        run: pm2 delete greetings-app-dev; exit 0
      
      - name: Start dev environment
        working-directory: ./python-greetings
        run: |
          cmd /c "pm2 start app.py --name greetings-app-dev -- --port 7001"

  tests-on-dev:
    needs: [deploy-to-dev]
    runs-on: self-hosted
    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v3.5.2
      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: ./course-js-api-framework
          fetch-depth: 0
      - name: Install npm dependencies
        working-directory: ./course-js-api-framework
        run: |
          npm install
          echo "Installed npm dependencies."
      - name: Run tests on Dev
        working-directory: ./course-js-api-framework
        run: |
          echo "Running tests on Dev..."
          npm run greetings greetings_dev
          
  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: [tests-on-dev]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: ./python-greetings
      - name: Install pm2
        working-directory: ./python-greetings
        run: |
          npm install -g pm2
      - name: Stop existing dev environment
        working-directory: ./python-greetings
        run: |
          pm2 delete greetings-app-staging & set "errorlevel=0" 
      - name: Deploy to Staging
        run: |
           echo "Deploying to Staging..."
           pm2 start app.py --name greetings-app-staging -- --port 7002

  tests-on-staging:
    runs-on: ubuntu-latest
    needs: deploy-to-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: ./course-js-api-framework
      - name: Install npm dependencies
        working-directory: ./course-js-api-framework
        run: |
          npm install
          npm audit fix --force
          echo "Installed npm dependencies."
      - name: Run tests on Staging
        run: |
          echo "Running tests on Staging..."
          npm run greetings greetings_staging

  deploy-to-preprod:
    runs-on: ubuntu-latest
    needs: tests-on-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Install pm2
        working-directory: ./python-greetings
        run: |
          npm install -g pm2
      - name: Stop existing dev environment
        working-directory: ./python-greetings
        run: |
          pm2 delete greetings-app-staging & set "errorlevel=0" 
      - name: Deploy to Preprod
        run: |
          echo "Deploying to Preprod..."
          pm2 start app.py --name greetings-app-preprod -- --port 7003

  tests-on-preprod:
    runs-on: windows-latest
    needs: deploy-to-preprod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: ./course-js-api-framework
      - name: Install npm dependencies
        working-directory: ./course-js-api-framework
        run: |
          npm install
          npm audit fix --force
          echo "Installed npm dependencies."
      - name: Run tests on Preprod
        run: |
          echo "Running tests on Preprod..."
          npm run greetings greetings_preprod

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: [tests-on-preprod]
    steps:
       - name: Checkout code
         uses: actions/checkout@v3.5.2
       - name: Clone python-greetings repository
         uses: actions/checkout@v3.5.2
         with:
            repository: mtararujs/python-greetings
            path: python-greetings
       - name: Install pm2
         working-directory: ./python-greetings
         run: |
            npm install -g pm2
       - name: Stop existing dev environment
         working-directory: ./python-greetings
         run: |
          pm2 delete greetings-app-prod & set "errorlevel=0" 
       - name: Deploy to Prod
         run: |
            echo "Deploying to Prod..."
            pm2 start app.py --name greetings-app-prod -- --port 7004

  tests-on-prod:
    runs-on: ubuntu-latest
    needs: [deploy-to-prod]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: ./course-js-api-framework
      - name: Install npm dependencies
        working-directory: ./course-js-api-framework
        run: |
          npm install
          npm audit fix --force
          echo "Installed npm dependencies."
      - name: Run tests on prod
        run: |
          echo "Running tests on Prod..."
          npm run greetings greetings_prod
